ARM GAS  C:\Users\Teodor\AppData\Local\Temp\ccMiHikc.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_it.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.NMI_Handler,"ax",%progbits
  20              		.align	1
  21              		.global	NMI_Handler
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	NMI_Handler:
  27              	.LFB130:
  28              		.file 1 "Core/Src/stm32f4xx_it.c"
   1:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f4xx_it.c **** /**
   3:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   5:Core/Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f4xx_it.c ****   * @attention
   8:Core/Src/stm32f4xx_it.c ****   *
   9:Core/Src/stm32f4xx_it.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/stm32f4xx_it.c ****   * All rights reserved.
  11:Core/Src/stm32f4xx_it.c ****   *
  12:Core/Src/stm32f4xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/stm32f4xx_it.c ****   * in the root directory of this software component.
  14:Core/Src/stm32f4xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/stm32f4xx_it.c ****   *
  16:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
  17:Core/Src/stm32f4xx_it.c ****   */
  18:Core/Src/stm32f4xx_it.c **** /* USER CODE END Header */
  19:Core/Src/stm32f4xx_it.c **** 
  20:Core/Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/stm32f4xx_it.c **** #include "main.h"
  22:Core/Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  23:Core/Src/stm32f4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/stm32f4xx_it.c **** /* USER CODE END Includes */
  26:Core/Src/stm32f4xx_it.c **** 
  27:Core/Src/stm32f4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN TD */
  29:Core/Src/stm32f4xx_it.c **** 
  30:Core/Src/stm32f4xx_it.c **** /* USER CODE END TD */
ARM GAS  C:\Users\Teodor\AppData\Local\Temp\ccMiHikc.s 			page 2


  31:Core/Src/stm32f4xx_it.c **** 
  32:Core/Src/stm32f4xx_it.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PD */
  34:Core/Src/stm32f4xx_it.c **** 
  35:Core/Src/stm32f4xx_it.c **** /* USER CODE END PD */
  36:Core/Src/stm32f4xx_it.c **** 
  37:Core/Src/stm32f4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PM */
  39:Core/Src/stm32f4xx_it.c **** 
  40:Core/Src/stm32f4xx_it.c **** /* USER CODE END PM */
  41:Core/Src/stm32f4xx_it.c **** 
  42:Core/Src/stm32f4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PV */
  44:Core/Src/stm32f4xx_it.c **** 
  45:Core/Src/stm32f4xx_it.c **** /* USER CODE END PV */
  46:Core/Src/stm32f4xx_it.c **** 
  47:Core/Src/stm32f4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  48:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PFP */
  49:Core/Src/stm32f4xx_it.c **** 
  50:Core/Src/stm32f4xx_it.c **** /* USER CODE END PFP */
  51:Core/Src/stm32f4xx_it.c **** 
  52:Core/Src/stm32f4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  53:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  54:Core/Src/stm32f4xx_it.c **** 
  55:Core/Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  56:Core/Src/stm32f4xx_it.c **** 
  57:Core/Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  58:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_i2c1_rx;
  59:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_i2c1_tx;
  60:Core/Src/stm32f4xx_it.c **** extern I2C_HandleTypeDef hi2c1;
  61:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_usart1_rx;
  62:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_usart1_tx;
  63:Core/Src/stm32f4xx_it.c **** extern UART_HandleTypeDef huart1;
  64:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN EV */
  65:Core/Src/stm32f4xx_it.c **** 
  66:Core/Src/stm32f4xx_it.c **** /* USER CODE END EV */
  67:Core/Src/stm32f4xx_it.c **** 
  68:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  69:Core/Src/stm32f4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */
  70:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  71:Core/Src/stm32f4xx_it.c **** /**
  72:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  73:Core/Src/stm32f4xx_it.c ****   */
  74:Core/Src/stm32f4xx_it.c **** void NMI_Handler(void)
  75:Core/Src/stm32f4xx_it.c **** {
  29              		.loc 1 75 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.L2:
  76:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  77:Core/Src/stm32f4xx_it.c **** 
  78:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  79:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  80:Core/Src/stm32f4xx_it.c ****   while (1)
ARM GAS  C:\Users\Teodor\AppData\Local\Temp\ccMiHikc.s 			page 3


  36              		.loc 1 80 3 discriminator 1 view .LVU1
  81:Core/Src/stm32f4xx_it.c ****   {
  82:Core/Src/stm32f4xx_it.c ****   }
  37              		.loc 1 82 3 discriminator 1 view .LVU2
  80:Core/Src/stm32f4xx_it.c ****   {
  38              		.loc 1 80 9 discriminator 1 view .LVU3
  39 0000 FEE7     		b	.L2
  40              		.cfi_endproc
  41              	.LFE130:
  43              		.section	.text.HardFault_Handler,"ax",%progbits
  44              		.align	1
  45              		.global	HardFault_Handler
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  50              	HardFault_Handler:
  51              	.LFB131:
  83:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  84:Core/Src/stm32f4xx_it.c **** }
  85:Core/Src/stm32f4xx_it.c **** 
  86:Core/Src/stm32f4xx_it.c **** /**
  87:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  88:Core/Src/stm32f4xx_it.c ****   */
  89:Core/Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  90:Core/Src/stm32f4xx_it.c **** {
  52              		.loc 1 90 1 view -0
  53              		.cfi_startproc
  54              		@ Volatile: function does not return.
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
  58              	.L4:
  91:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  92:Core/Src/stm32f4xx_it.c **** 
  93:Core/Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  94:Core/Src/stm32f4xx_it.c ****   while (1)
  59              		.loc 1 94 3 discriminator 1 view .LVU5
  95:Core/Src/stm32f4xx_it.c ****   {
  96:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  97:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  98:Core/Src/stm32f4xx_it.c ****   }
  60              		.loc 1 98 3 discriminator 1 view .LVU6
  94:Core/Src/stm32f4xx_it.c ****   {
  61              		.loc 1 94 9 discriminator 1 view .LVU7
  62 0000 FEE7     		b	.L4
  63              		.cfi_endproc
  64              	.LFE131:
  66              		.section	.text.MemManage_Handler,"ax",%progbits
  67              		.align	1
  68              		.global	MemManage_Handler
  69              		.syntax unified
  70              		.thumb
  71              		.thumb_func
  73              	MemManage_Handler:
  74              	.LFB132:
  99:Core/Src/stm32f4xx_it.c **** }
 100:Core/Src/stm32f4xx_it.c **** 
ARM GAS  C:\Users\Teodor\AppData\Local\Temp\ccMiHikc.s 			page 4


 101:Core/Src/stm32f4xx_it.c **** /**
 102:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Memory management fault.
 103:Core/Src/stm32f4xx_it.c ****   */
 104:Core/Src/stm32f4xx_it.c **** void MemManage_Handler(void)
 105:Core/Src/stm32f4xx_it.c **** {
  75              		.loc 1 105 1 view -0
  76              		.cfi_startproc
  77              		@ Volatile: function does not return.
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80              		@ link register save eliminated.
  81              	.L6:
 106:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 107:Core/Src/stm32f4xx_it.c **** 
 108:Core/Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 109:Core/Src/stm32f4xx_it.c ****   while (1)
  82              		.loc 1 109 3 discriminator 1 view .LVU9
 110:Core/Src/stm32f4xx_it.c ****   {
 111:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 112:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 113:Core/Src/stm32f4xx_it.c ****   }
  83              		.loc 1 113 3 discriminator 1 view .LVU10
 109:Core/Src/stm32f4xx_it.c ****   {
  84              		.loc 1 109 9 discriminator 1 view .LVU11
  85 0000 FEE7     		b	.L6
  86              		.cfi_endproc
  87              	.LFE132:
  89              		.section	.text.BusFault_Handler,"ax",%progbits
  90              		.align	1
  91              		.global	BusFault_Handler
  92              		.syntax unified
  93              		.thumb
  94              		.thumb_func
  96              	BusFault_Handler:
  97              	.LFB133:
 114:Core/Src/stm32f4xx_it.c **** }
 115:Core/Src/stm32f4xx_it.c **** 
 116:Core/Src/stm32f4xx_it.c **** /**
 117:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 118:Core/Src/stm32f4xx_it.c ****   */
 119:Core/Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 120:Core/Src/stm32f4xx_it.c **** {
  98              		.loc 1 120 1 view -0
  99              		.cfi_startproc
 100              		@ Volatile: function does not return.
 101              		@ args = 0, pretend = 0, frame = 0
 102              		@ frame_needed = 0, uses_anonymous_args = 0
 103              		@ link register save eliminated.
 104              	.L8:
 121:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 122:Core/Src/stm32f4xx_it.c **** 
 123:Core/Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 124:Core/Src/stm32f4xx_it.c ****   while (1)
 105              		.loc 1 124 3 discriminator 1 view .LVU13
 125:Core/Src/stm32f4xx_it.c ****   {
 126:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 127:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
ARM GAS  C:\Users\Teodor\AppData\Local\Temp\ccMiHikc.s 			page 5


 128:Core/Src/stm32f4xx_it.c ****   }
 106              		.loc 1 128 3 discriminator 1 view .LVU14
 124:Core/Src/stm32f4xx_it.c ****   {
 107              		.loc 1 124 9 discriminator 1 view .LVU15
 108 0000 FEE7     		b	.L8
 109              		.cfi_endproc
 110              	.LFE133:
 112              		.section	.text.UsageFault_Handler,"ax",%progbits
 113              		.align	1
 114              		.global	UsageFault_Handler
 115              		.syntax unified
 116              		.thumb
 117              		.thumb_func
 119              	UsageFault_Handler:
 120              	.LFB134:
 129:Core/Src/stm32f4xx_it.c **** }
 130:Core/Src/stm32f4xx_it.c **** 
 131:Core/Src/stm32f4xx_it.c **** /**
 132:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 133:Core/Src/stm32f4xx_it.c ****   */
 134:Core/Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 135:Core/Src/stm32f4xx_it.c **** {
 121              		.loc 1 135 1 view -0
 122              		.cfi_startproc
 123              		@ Volatile: function does not return.
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              		@ link register save eliminated.
 127              	.L10:
 136:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 137:Core/Src/stm32f4xx_it.c **** 
 138:Core/Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 139:Core/Src/stm32f4xx_it.c ****   while (1)
 128              		.loc 1 139 3 discriminator 1 view .LVU17
 140:Core/Src/stm32f4xx_it.c ****   {
 141:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 142:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 143:Core/Src/stm32f4xx_it.c ****   }
 129              		.loc 1 143 3 discriminator 1 view .LVU18
 139:Core/Src/stm32f4xx_it.c ****   {
 130              		.loc 1 139 9 discriminator 1 view .LVU19
 131 0000 FEE7     		b	.L10
 132              		.cfi_endproc
 133              	.LFE134:
 135              		.section	.text.SVC_Handler,"ax",%progbits
 136              		.align	1
 137              		.global	SVC_Handler
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 142              	SVC_Handler:
 143              	.LFB135:
 144:Core/Src/stm32f4xx_it.c **** }
 145:Core/Src/stm32f4xx_it.c **** 
 146:Core/Src/stm32f4xx_it.c **** /**
 147:Core/Src/stm32f4xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 148:Core/Src/stm32f4xx_it.c ****   */
ARM GAS  C:\Users\Teodor\AppData\Local\Temp\ccMiHikc.s 			page 6


 149:Core/Src/stm32f4xx_it.c **** void SVC_Handler(void)
 150:Core/Src/stm32f4xx_it.c **** {
 144              		.loc 1 150 1 view -0
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 0, uses_anonymous_args = 0
 148              		@ link register save eliminated.
 151:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 152:Core/Src/stm32f4xx_it.c **** 
 153:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 154:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 155:Core/Src/stm32f4xx_it.c **** 
 156:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 157:Core/Src/stm32f4xx_it.c **** }
 149              		.loc 1 157 1 view .LVU21
 150 0000 7047     		bx	lr
 151              		.cfi_endproc
 152              	.LFE135:
 154              		.section	.text.DebugMon_Handler,"ax",%progbits
 155              		.align	1
 156              		.global	DebugMon_Handler
 157              		.syntax unified
 158              		.thumb
 159              		.thumb_func
 161              	DebugMon_Handler:
 162              	.LFB136:
 158:Core/Src/stm32f4xx_it.c **** 
 159:Core/Src/stm32f4xx_it.c **** /**
 160:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Debug monitor.
 161:Core/Src/stm32f4xx_it.c ****   */
 162:Core/Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 163:Core/Src/stm32f4xx_it.c **** {
 163              		.loc 1 163 1 view -0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167              		@ link register save eliminated.
 164:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 165:Core/Src/stm32f4xx_it.c **** 
 166:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 167:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 168:Core/Src/stm32f4xx_it.c **** 
 169:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 170:Core/Src/stm32f4xx_it.c **** }
 168              		.loc 1 170 1 view .LVU23
 169 0000 7047     		bx	lr
 170              		.cfi_endproc
 171              	.LFE136:
 173              		.section	.text.PendSV_Handler,"ax",%progbits
 174              		.align	1
 175              		.global	PendSV_Handler
 176              		.syntax unified
 177              		.thumb
 178              		.thumb_func
 180              	PendSV_Handler:
 181              	.LFB137:
 171:Core/Src/stm32f4xx_it.c **** 
ARM GAS  C:\Users\Teodor\AppData\Local\Temp\ccMiHikc.s 			page 7


 172:Core/Src/stm32f4xx_it.c **** /**
 173:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Pendable request for system service.
 174:Core/Src/stm32f4xx_it.c ****   */
 175:Core/Src/stm32f4xx_it.c **** void PendSV_Handler(void)
 176:Core/Src/stm32f4xx_it.c **** {
 182              		.loc 1 176 1 view -0
 183              		.cfi_startproc
 184              		@ args = 0, pretend = 0, frame = 0
 185              		@ frame_needed = 0, uses_anonymous_args = 0
 186              		@ link register save eliminated.
 177:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 178:Core/Src/stm32f4xx_it.c **** 
 179:Core/Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 180:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 181:Core/Src/stm32f4xx_it.c **** 
 182:Core/Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 183:Core/Src/stm32f4xx_it.c **** }
 187              		.loc 1 183 1 view .LVU25
 188 0000 7047     		bx	lr
 189              		.cfi_endproc
 190              	.LFE137:
 192              		.section	.text.SysTick_Handler,"ax",%progbits
 193              		.align	1
 194              		.global	SysTick_Handler
 195              		.syntax unified
 196              		.thumb
 197              		.thumb_func
 199              	SysTick_Handler:
 200              	.LFB138:
 184:Core/Src/stm32f4xx_it.c **** 
 185:Core/Src/stm32f4xx_it.c **** /**
 186:Core/Src/stm32f4xx_it.c ****   * @brief This function handles System tick timer.
 187:Core/Src/stm32f4xx_it.c ****   */
 188:Core/Src/stm32f4xx_it.c **** void SysTick_Handler(void)
 189:Core/Src/stm32f4xx_it.c **** {
 201              		.loc 1 189 1 view -0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205 0000 08B5     		push	{r3, lr}
 206              	.LCFI0:
 207              		.cfi_def_cfa_offset 8
 208              		.cfi_offset 3, -8
 209              		.cfi_offset 14, -4
 190:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 191:Core/Src/stm32f4xx_it.c **** 
 192:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 193:Core/Src/stm32f4xx_it.c ****   HAL_IncTick();
 210              		.loc 1 193 3 view .LVU27
 211 0002 FFF7FEFF 		bl	HAL_IncTick
 212              	.LVL0:
 194:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 195:Core/Src/stm32f4xx_it.c **** 
 196:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 197:Core/Src/stm32f4xx_it.c **** }
 213              		.loc 1 197 1 is_stmt 0 view .LVU28
 214 0006 08BD     		pop	{r3, pc}
ARM GAS  C:\Users\Teodor\AppData\Local\Temp\ccMiHikc.s 			page 8


 215              		.cfi_endproc
 216              	.LFE138:
 218              		.section	.text.DMA1_Stream0_IRQHandler,"ax",%progbits
 219              		.align	1
 220              		.global	DMA1_Stream0_IRQHandler
 221              		.syntax unified
 222              		.thumb
 223              		.thumb_func
 225              	DMA1_Stream0_IRQHandler:
 226              	.LFB139:
 198:Core/Src/stm32f4xx_it.c **** 
 199:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 200:Core/Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 201:Core/Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 202:Core/Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 203:Core/Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 204:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 205:Core/Src/stm32f4xx_it.c **** 
 206:Core/Src/stm32f4xx_it.c **** /**
 207:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA1 stream0 global interrupt.
 208:Core/Src/stm32f4xx_it.c ****   */
 209:Core/Src/stm32f4xx_it.c **** void DMA1_Stream0_IRQHandler(void)
 210:Core/Src/stm32f4xx_it.c **** {
 227              		.loc 1 210 1 is_stmt 1 view -0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 0
 230              		@ frame_needed = 0, uses_anonymous_args = 0
 231 0000 08B5     		push	{r3, lr}
 232              	.LCFI1:
 233              		.cfi_def_cfa_offset 8
 234              		.cfi_offset 3, -8
 235              		.cfi_offset 14, -4
 211:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream0_IRQn 0 */
 212:Core/Src/stm32f4xx_it.c **** 
 213:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream0_IRQn 0 */
 214:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_i2c1_rx);
 236              		.loc 1 214 3 view .LVU30
 237 0002 0248     		ldr	r0, .L18
 238 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 239              	.LVL1:
 215:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream0_IRQn 1 */
 216:Core/Src/stm32f4xx_it.c **** 
 217:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream0_IRQn 1 */
 218:Core/Src/stm32f4xx_it.c **** }
 240              		.loc 1 218 1 is_stmt 0 view .LVU31
 241 0008 08BD     		pop	{r3, pc}
 242              	.L19:
 243 000a 00BF     		.align	2
 244              	.L18:
 245 000c 00000000 		.word	hdma_i2c1_rx
 246              		.cfi_endproc
 247              	.LFE139:
 249              		.section	.text.DMA1_Stream6_IRQHandler,"ax",%progbits
 250              		.align	1
 251              		.global	DMA1_Stream6_IRQHandler
 252              		.syntax unified
 253              		.thumb
ARM GAS  C:\Users\Teodor\AppData\Local\Temp\ccMiHikc.s 			page 9


 254              		.thumb_func
 256              	DMA1_Stream6_IRQHandler:
 257              	.LFB140:
 219:Core/Src/stm32f4xx_it.c **** 
 220:Core/Src/stm32f4xx_it.c **** /**
 221:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA1 stream6 global interrupt.
 222:Core/Src/stm32f4xx_it.c ****   */
 223:Core/Src/stm32f4xx_it.c **** void DMA1_Stream6_IRQHandler(void)
 224:Core/Src/stm32f4xx_it.c **** {
 258              		.loc 1 224 1 is_stmt 1 view -0
 259              		.cfi_startproc
 260              		@ args = 0, pretend = 0, frame = 0
 261              		@ frame_needed = 0, uses_anonymous_args = 0
 262 0000 08B5     		push	{r3, lr}
 263              	.LCFI2:
 264              		.cfi_def_cfa_offset 8
 265              		.cfi_offset 3, -8
 266              		.cfi_offset 14, -4
 225:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream6_IRQn 0 */
 226:Core/Src/stm32f4xx_it.c **** 
 227:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream6_IRQn 0 */
 228:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_i2c1_tx);
 267              		.loc 1 228 3 view .LVU33
 268 0002 0248     		ldr	r0, .L22
 269 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 270              	.LVL2:
 229:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream6_IRQn 1 */
 230:Core/Src/stm32f4xx_it.c **** 
 231:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream6_IRQn 1 */
 232:Core/Src/stm32f4xx_it.c **** }
 271              		.loc 1 232 1 is_stmt 0 view .LVU34
 272 0008 08BD     		pop	{r3, pc}
 273              	.L23:
 274 000a 00BF     		.align	2
 275              	.L22:
 276 000c 00000000 		.word	hdma_i2c1_tx
 277              		.cfi_endproc
 278              	.LFE140:
 280              		.section	.text.EXTI9_5_IRQHandler,"ax",%progbits
 281              		.align	1
 282              		.global	EXTI9_5_IRQHandler
 283              		.syntax unified
 284              		.thumb
 285              		.thumb_func
 287              	EXTI9_5_IRQHandler:
 288              	.LFB141:
 233:Core/Src/stm32f4xx_it.c **** 
 234:Core/Src/stm32f4xx_it.c **** /**
 235:Core/Src/stm32f4xx_it.c ****   * @brief This function handles EXTI line[9:5] interrupts.
 236:Core/Src/stm32f4xx_it.c ****   */
 237:Core/Src/stm32f4xx_it.c **** void EXTI9_5_IRQHandler(void)
 238:Core/Src/stm32f4xx_it.c **** {
 289              		.loc 1 238 1 is_stmt 1 view -0
 290              		.cfi_startproc
 291              		@ args = 0, pretend = 0, frame = 0
 292              		@ frame_needed = 0, uses_anonymous_args = 0
 293 0000 08B5     		push	{r3, lr}
ARM GAS  C:\Users\Teodor\AppData\Local\Temp\ccMiHikc.s 			page 10


 294              	.LCFI3:
 295              		.cfi_def_cfa_offset 8
 296              		.cfi_offset 3, -8
 297              		.cfi_offset 14, -4
 239:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI9_5_IRQn 0 */
 240:Core/Src/stm32f4xx_it.c **** 
 241:Core/Src/stm32f4xx_it.c ****   /* USER CODE END EXTI9_5_IRQn 0 */
 242:Core/Src/stm32f4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_5);
 298              		.loc 1 242 3 view .LVU36
 299 0002 2020     		movs	r0, #32
 300 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 301              	.LVL3:
 243:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI9_5_IRQn 1 */
 244:Core/Src/stm32f4xx_it.c **** 
 245:Core/Src/stm32f4xx_it.c ****   /* USER CODE END EXTI9_5_IRQn 1 */
 246:Core/Src/stm32f4xx_it.c **** }
 302              		.loc 1 246 1 is_stmt 0 view .LVU37
 303 0008 08BD     		pop	{r3, pc}
 304              		.cfi_endproc
 305              	.LFE141:
 307              		.section	.text.I2C1_EV_IRQHandler,"ax",%progbits
 308              		.align	1
 309              		.global	I2C1_EV_IRQHandler
 310              		.syntax unified
 311              		.thumb
 312              		.thumb_func
 314              	I2C1_EV_IRQHandler:
 315              	.LFB142:
 247:Core/Src/stm32f4xx_it.c **** 
 248:Core/Src/stm32f4xx_it.c **** /**
 249:Core/Src/stm32f4xx_it.c ****   * @brief This function handles I2C1 event interrupt.
 250:Core/Src/stm32f4xx_it.c ****   */
 251:Core/Src/stm32f4xx_it.c **** void I2C1_EV_IRQHandler(void)
 252:Core/Src/stm32f4xx_it.c **** {
 316              		.loc 1 252 1 is_stmt 1 view -0
 317              		.cfi_startproc
 318              		@ args = 0, pretend = 0, frame = 0
 319              		@ frame_needed = 0, uses_anonymous_args = 0
 320 0000 08B5     		push	{r3, lr}
 321              	.LCFI4:
 322              		.cfi_def_cfa_offset 8
 323              		.cfi_offset 3, -8
 324              		.cfi_offset 14, -4
 253:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN I2C1_EV_IRQn 0 */
 254:Core/Src/stm32f4xx_it.c **** 
 255:Core/Src/stm32f4xx_it.c ****   /* USER CODE END I2C1_EV_IRQn 0 */
 256:Core/Src/stm32f4xx_it.c ****   HAL_I2C_EV_IRQHandler(&hi2c1);
 325              		.loc 1 256 3 view .LVU39
 326 0002 0248     		ldr	r0, .L28
 327 0004 FFF7FEFF 		bl	HAL_I2C_EV_IRQHandler
 328              	.LVL4:
 257:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN I2C1_EV_IRQn 1 */
 258:Core/Src/stm32f4xx_it.c **** 
 259:Core/Src/stm32f4xx_it.c ****   /* USER CODE END I2C1_EV_IRQn 1 */
 260:Core/Src/stm32f4xx_it.c **** }
 329              		.loc 1 260 1 is_stmt 0 view .LVU40
 330 0008 08BD     		pop	{r3, pc}
ARM GAS  C:\Users\Teodor\AppData\Local\Temp\ccMiHikc.s 			page 11


 331              	.L29:
 332 000a 00BF     		.align	2
 333              	.L28:
 334 000c 00000000 		.word	hi2c1
 335              		.cfi_endproc
 336              	.LFE142:
 338              		.section	.text.I2C1_ER_IRQHandler,"ax",%progbits
 339              		.align	1
 340              		.global	I2C1_ER_IRQHandler
 341              		.syntax unified
 342              		.thumb
 343              		.thumb_func
 345              	I2C1_ER_IRQHandler:
 346              	.LFB143:
 261:Core/Src/stm32f4xx_it.c **** 
 262:Core/Src/stm32f4xx_it.c **** /**
 263:Core/Src/stm32f4xx_it.c ****   * @brief This function handles I2C1 error interrupt.
 264:Core/Src/stm32f4xx_it.c ****   */
 265:Core/Src/stm32f4xx_it.c **** void I2C1_ER_IRQHandler(void)
 266:Core/Src/stm32f4xx_it.c **** {
 347              		.loc 1 266 1 is_stmt 1 view -0
 348              		.cfi_startproc
 349              		@ args = 0, pretend = 0, frame = 0
 350              		@ frame_needed = 0, uses_anonymous_args = 0
 351 0000 08B5     		push	{r3, lr}
 352              	.LCFI5:
 353              		.cfi_def_cfa_offset 8
 354              		.cfi_offset 3, -8
 355              		.cfi_offset 14, -4
 267:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN I2C1_ER_IRQn 0 */
 268:Core/Src/stm32f4xx_it.c **** 
 269:Core/Src/stm32f4xx_it.c ****   /* USER CODE END I2C1_ER_IRQn 0 */
 270:Core/Src/stm32f4xx_it.c ****   HAL_I2C_ER_IRQHandler(&hi2c1);
 356              		.loc 1 270 3 view .LVU42
 357 0002 0248     		ldr	r0, .L32
 358 0004 FFF7FEFF 		bl	HAL_I2C_ER_IRQHandler
 359              	.LVL5:
 271:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN I2C1_ER_IRQn 1 */
 272:Core/Src/stm32f4xx_it.c **** 
 273:Core/Src/stm32f4xx_it.c ****   /* USER CODE END I2C1_ER_IRQn 1 */
 274:Core/Src/stm32f4xx_it.c **** }
 360              		.loc 1 274 1 is_stmt 0 view .LVU43
 361 0008 08BD     		pop	{r3, pc}
 362              	.L33:
 363 000a 00BF     		.align	2
 364              	.L32:
 365 000c 00000000 		.word	hi2c1
 366              		.cfi_endproc
 367              	.LFE143:
 369              		.section	.text.USART1_IRQHandler,"ax",%progbits
 370              		.align	1
 371              		.global	USART1_IRQHandler
 372              		.syntax unified
 373              		.thumb
 374              		.thumb_func
 376              	USART1_IRQHandler:
 377              	.LFB144:
ARM GAS  C:\Users\Teodor\AppData\Local\Temp\ccMiHikc.s 			page 12


 275:Core/Src/stm32f4xx_it.c **** 
 276:Core/Src/stm32f4xx_it.c **** /**
 277:Core/Src/stm32f4xx_it.c ****   * @brief This function handles USART1 global interrupt.
 278:Core/Src/stm32f4xx_it.c ****   */
 279:Core/Src/stm32f4xx_it.c **** void USART1_IRQHandler(void)
 280:Core/Src/stm32f4xx_it.c **** {
 378              		.loc 1 280 1 is_stmt 1 view -0
 379              		.cfi_startproc
 380              		@ args = 0, pretend = 0, frame = 0
 381              		@ frame_needed = 0, uses_anonymous_args = 0
 382 0000 08B5     		push	{r3, lr}
 383              	.LCFI6:
 384              		.cfi_def_cfa_offset 8
 385              		.cfi_offset 3, -8
 386              		.cfi_offset 14, -4
 281:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 0 */
 282:Core/Src/stm32f4xx_it.c **** 
 283:Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART1_IRQn 0 */
 284:Core/Src/stm32f4xx_it.c ****   HAL_UART_IRQHandler(&huart1);
 387              		.loc 1 284 3 view .LVU45
 388 0002 0248     		ldr	r0, .L36
 389 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 390              	.LVL6:
 285:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 1 */
 286:Core/Src/stm32f4xx_it.c **** 
 287:Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART1_IRQn 1 */
 288:Core/Src/stm32f4xx_it.c **** }
 391              		.loc 1 288 1 is_stmt 0 view .LVU46
 392 0008 08BD     		pop	{r3, pc}
 393              	.L37:
 394 000a 00BF     		.align	2
 395              	.L36:
 396 000c 00000000 		.word	huart1
 397              		.cfi_endproc
 398              	.LFE144:
 400              		.section	.text.DMA2_Stream2_IRQHandler,"ax",%progbits
 401              		.align	1
 402              		.global	DMA2_Stream2_IRQHandler
 403              		.syntax unified
 404              		.thumb
 405              		.thumb_func
 407              	DMA2_Stream2_IRQHandler:
 408              	.LFB145:
 289:Core/Src/stm32f4xx_it.c **** 
 290:Core/Src/stm32f4xx_it.c **** /**
 291:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA2 stream2 global interrupt.
 292:Core/Src/stm32f4xx_it.c ****   */
 293:Core/Src/stm32f4xx_it.c **** void DMA2_Stream2_IRQHandler(void)
 294:Core/Src/stm32f4xx_it.c **** {
 409              		.loc 1 294 1 is_stmt 1 view -0
 410              		.cfi_startproc
 411              		@ args = 0, pretend = 0, frame = 0
 412              		@ frame_needed = 0, uses_anonymous_args = 0
 413 0000 08B5     		push	{r3, lr}
 414              	.LCFI7:
 415              		.cfi_def_cfa_offset 8
 416              		.cfi_offset 3, -8
ARM GAS  C:\Users\Teodor\AppData\Local\Temp\ccMiHikc.s 			page 13


 417              		.cfi_offset 14, -4
 295:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream2_IRQn 0 */
 296:Core/Src/stm32f4xx_it.c **** 
 297:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream2_IRQn 0 */
 298:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart1_rx);
 418              		.loc 1 298 3 view .LVU48
 419 0002 0248     		ldr	r0, .L40
 420 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 421              	.LVL7:
 299:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream2_IRQn 1 */
 300:Core/Src/stm32f4xx_it.c **** 
 301:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream2_IRQn 1 */
 302:Core/Src/stm32f4xx_it.c **** }
 422              		.loc 1 302 1 is_stmt 0 view .LVU49
 423 0008 08BD     		pop	{r3, pc}
 424              	.L41:
 425 000a 00BF     		.align	2
 426              	.L40:
 427 000c 00000000 		.word	hdma_usart1_rx
 428              		.cfi_endproc
 429              	.LFE145:
 431              		.section	.text.DMA2_Stream7_IRQHandler,"ax",%progbits
 432              		.align	1
 433              		.global	DMA2_Stream7_IRQHandler
 434              		.syntax unified
 435              		.thumb
 436              		.thumb_func
 438              	DMA2_Stream7_IRQHandler:
 439              	.LFB146:
 303:Core/Src/stm32f4xx_it.c **** 
 304:Core/Src/stm32f4xx_it.c **** /**
 305:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA2 stream7 global interrupt.
 306:Core/Src/stm32f4xx_it.c ****   */
 307:Core/Src/stm32f4xx_it.c **** void DMA2_Stream7_IRQHandler(void)
 308:Core/Src/stm32f4xx_it.c **** {
 440              		.loc 1 308 1 is_stmt 1 view -0
 441              		.cfi_startproc
 442              		@ args = 0, pretend = 0, frame = 0
 443              		@ frame_needed = 0, uses_anonymous_args = 0
 444 0000 08B5     		push	{r3, lr}
 445              	.LCFI8:
 446              		.cfi_def_cfa_offset 8
 447              		.cfi_offset 3, -8
 448              		.cfi_offset 14, -4
 309:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream7_IRQn 0 */
 310:Core/Src/stm32f4xx_it.c **** 
 311:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream7_IRQn 0 */
 312:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart1_tx);
 449              		.loc 1 312 3 view .LVU51
 450 0002 0248     		ldr	r0, .L44
 451 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 452              	.LVL8:
 313:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream7_IRQn 1 */
 314:Core/Src/stm32f4xx_it.c **** 
 315:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream7_IRQn 1 */
 316:Core/Src/stm32f4xx_it.c **** }
 453              		.loc 1 316 1 is_stmt 0 view .LVU52
ARM GAS  C:\Users\Teodor\AppData\Local\Temp\ccMiHikc.s 			page 14


 454 0008 08BD     		pop	{r3, pc}
 455              	.L45:
 456 000a 00BF     		.align	2
 457              	.L44:
 458 000c 00000000 		.word	hdma_usart1_tx
 459              		.cfi_endproc
 460              	.LFE146:
 462              		.text
 463              	.Letext0:
 464              		.file 2 "e:\\gnu_tools\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\machine\\_
 465              		.file 3 "e:\\gnu_tools\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\sys\\_stdi
 466              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xc.h"
 467              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 468              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 469              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 470              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 471              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 472              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  C:\Users\Teodor\AppData\Local\Temp\ccMiHikc.s 			page 15


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_it.c
C:\Users\Teodor\AppData\Local\Temp\ccMiHikc.s:20     .text.NMI_Handler:00000000 $t
C:\Users\Teodor\AppData\Local\Temp\ccMiHikc.s:26     .text.NMI_Handler:00000000 NMI_Handler
C:\Users\Teodor\AppData\Local\Temp\ccMiHikc.s:44     .text.HardFault_Handler:00000000 $t
C:\Users\Teodor\AppData\Local\Temp\ccMiHikc.s:50     .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\Teodor\AppData\Local\Temp\ccMiHikc.s:67     .text.MemManage_Handler:00000000 $t
C:\Users\Teodor\AppData\Local\Temp\ccMiHikc.s:73     .text.MemManage_Handler:00000000 MemManage_Handler
C:\Users\Teodor\AppData\Local\Temp\ccMiHikc.s:90     .text.BusFault_Handler:00000000 $t
C:\Users\Teodor\AppData\Local\Temp\ccMiHikc.s:96     .text.BusFault_Handler:00000000 BusFault_Handler
C:\Users\Teodor\AppData\Local\Temp\ccMiHikc.s:113    .text.UsageFault_Handler:00000000 $t
C:\Users\Teodor\AppData\Local\Temp\ccMiHikc.s:119    .text.UsageFault_Handler:00000000 UsageFault_Handler
C:\Users\Teodor\AppData\Local\Temp\ccMiHikc.s:136    .text.SVC_Handler:00000000 $t
C:\Users\Teodor\AppData\Local\Temp\ccMiHikc.s:142    .text.SVC_Handler:00000000 SVC_Handler
C:\Users\Teodor\AppData\Local\Temp\ccMiHikc.s:155    .text.DebugMon_Handler:00000000 $t
C:\Users\Teodor\AppData\Local\Temp\ccMiHikc.s:161    .text.DebugMon_Handler:00000000 DebugMon_Handler
C:\Users\Teodor\AppData\Local\Temp\ccMiHikc.s:174    .text.PendSV_Handler:00000000 $t
C:\Users\Teodor\AppData\Local\Temp\ccMiHikc.s:180    .text.PendSV_Handler:00000000 PendSV_Handler
C:\Users\Teodor\AppData\Local\Temp\ccMiHikc.s:193    .text.SysTick_Handler:00000000 $t
C:\Users\Teodor\AppData\Local\Temp\ccMiHikc.s:199    .text.SysTick_Handler:00000000 SysTick_Handler
C:\Users\Teodor\AppData\Local\Temp\ccMiHikc.s:219    .text.DMA1_Stream0_IRQHandler:00000000 $t
C:\Users\Teodor\AppData\Local\Temp\ccMiHikc.s:225    .text.DMA1_Stream0_IRQHandler:00000000 DMA1_Stream0_IRQHandler
C:\Users\Teodor\AppData\Local\Temp\ccMiHikc.s:245    .text.DMA1_Stream0_IRQHandler:0000000c $d
C:\Users\Teodor\AppData\Local\Temp\ccMiHikc.s:250    .text.DMA1_Stream6_IRQHandler:00000000 $t
C:\Users\Teodor\AppData\Local\Temp\ccMiHikc.s:256    .text.DMA1_Stream6_IRQHandler:00000000 DMA1_Stream6_IRQHandler
C:\Users\Teodor\AppData\Local\Temp\ccMiHikc.s:276    .text.DMA1_Stream6_IRQHandler:0000000c $d
C:\Users\Teodor\AppData\Local\Temp\ccMiHikc.s:281    .text.EXTI9_5_IRQHandler:00000000 $t
C:\Users\Teodor\AppData\Local\Temp\ccMiHikc.s:287    .text.EXTI9_5_IRQHandler:00000000 EXTI9_5_IRQHandler
C:\Users\Teodor\AppData\Local\Temp\ccMiHikc.s:308    .text.I2C1_EV_IRQHandler:00000000 $t
C:\Users\Teodor\AppData\Local\Temp\ccMiHikc.s:314    .text.I2C1_EV_IRQHandler:00000000 I2C1_EV_IRQHandler
C:\Users\Teodor\AppData\Local\Temp\ccMiHikc.s:334    .text.I2C1_EV_IRQHandler:0000000c $d
C:\Users\Teodor\AppData\Local\Temp\ccMiHikc.s:339    .text.I2C1_ER_IRQHandler:00000000 $t
C:\Users\Teodor\AppData\Local\Temp\ccMiHikc.s:345    .text.I2C1_ER_IRQHandler:00000000 I2C1_ER_IRQHandler
C:\Users\Teodor\AppData\Local\Temp\ccMiHikc.s:365    .text.I2C1_ER_IRQHandler:0000000c $d
C:\Users\Teodor\AppData\Local\Temp\ccMiHikc.s:370    .text.USART1_IRQHandler:00000000 $t
C:\Users\Teodor\AppData\Local\Temp\ccMiHikc.s:376    .text.USART1_IRQHandler:00000000 USART1_IRQHandler
C:\Users\Teodor\AppData\Local\Temp\ccMiHikc.s:396    .text.USART1_IRQHandler:0000000c $d
C:\Users\Teodor\AppData\Local\Temp\ccMiHikc.s:401    .text.DMA2_Stream2_IRQHandler:00000000 $t
C:\Users\Teodor\AppData\Local\Temp\ccMiHikc.s:407    .text.DMA2_Stream2_IRQHandler:00000000 DMA2_Stream2_IRQHandler
C:\Users\Teodor\AppData\Local\Temp\ccMiHikc.s:427    .text.DMA2_Stream2_IRQHandler:0000000c $d
C:\Users\Teodor\AppData\Local\Temp\ccMiHikc.s:432    .text.DMA2_Stream7_IRQHandler:00000000 $t
C:\Users\Teodor\AppData\Local\Temp\ccMiHikc.s:438    .text.DMA2_Stream7_IRQHandler:00000000 DMA2_Stream7_IRQHandler
C:\Users\Teodor\AppData\Local\Temp\ccMiHikc.s:458    .text.DMA2_Stream7_IRQHandler:0000000c $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_DMA_IRQHandler
hdma_i2c1_rx
hdma_i2c1_tx
HAL_GPIO_EXTI_IRQHandler
HAL_I2C_EV_IRQHandler
hi2c1
HAL_I2C_ER_IRQHandler
HAL_UART_IRQHandler
huart1
hdma_usart1_rx
hdma_usart1_tx
ARM GAS  C:\Users\Teodor\AppData\Local\Temp\ccMiHikc.s 			page 16


