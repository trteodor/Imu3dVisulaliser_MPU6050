ARM GAS  C:\Users\Teodor\AppData\Local\Temp\ccD05ezz.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.HAL_I2C_MemRxCpltCallback,"ax",%progbits
  20              		.align	1
  21              		.global	HAL_I2C_MemRxCpltCallback
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	HAL_I2C_MemRxCpltCallback:
  27              	.LVL0:
  28              	.LFB133:
  29              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "dma.h"
  22:Core/Src/main.c **** #include "i2c.h"
  23:Core/Src/main.c **** #include "usart.h"
  24:Core/Src/main.c **** #include "gpio.h"
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  28:Core/Src/main.c **** #include "BluetoothClassicComm.h"
  29:Core/Src/main.c **** #include "mpu6050.h"
ARM GAS  C:\Users\Teodor\AppData\Local\Temp\ccD05ezz.s 			page 2


  30:Core/Src/main.c **** /* USER CODE END Includes */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PTD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PD */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  43:Core/Src/main.c **** /* USER CODE BEGIN PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE END PM */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE BEGIN PV */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* USER CODE END PV */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  54:Core/Src/main.c **** void SystemClock_Config(void);
  55:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* USER CODE END PFP */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  60:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  61:Core/Src/main.c **** uint32_t RecMpuDataCounter = 0;
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** uint8_t gyroCalibValues[6] = {0, 23, 0, 63, 0, 27};
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** MpuData_t MpuData;
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** // As the sensor is set in init, the sensor takes a sample every 5ms (200hz),
  71:Core/Src/main.c **** // creates an interrupt, then puts the dma data in the buffer, 
  72:Core/Src/main.c **** // then the data is scaled and the orientations are calculated.
  73:Core/Src/main.c **** // This process is repeated automatically every 5ms. So dt is 0.005 seconds
  74:Core/Src/main.c **** void HAL_I2C_MemRxCpltCallback(I2C_HandleTypeDef *hi2c)
  75:Core/Src/main.c **** {
  30              		.loc 1 75 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 75 1 is_stmt 0 view .LVU1
  35 0000 08B5     		push	{r3, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 3, -8
  39              		.cfi_offset 14, -4
  76:Core/Src/main.c ****   MPU6050_ReadDmaDataEndCallBack(&MpuData);
ARM GAS  C:\Users\Teodor\AppData\Local\Temp\ccD05ezz.s 			page 3


  40              		.loc 1 76 3 is_stmt 1 view .LVU2
  41 0002 0448     		ldr	r0, .L3
  42              	.LVL1:
  43              		.loc 1 76 3 is_stmt 0 view .LVU3
  44 0004 FFF7FEFF 		bl	MPU6050_ReadDmaDataEndCallBack
  45              	.LVL2:
  77:Core/Src/main.c ****   RecMpuDataCounter++;
  46              		.loc 1 77 3 is_stmt 1 view .LVU4
  47              		.loc 1 77 20 is_stmt 0 view .LVU5
  48 0008 034A     		ldr	r2, .L3+4
  49 000a 1368     		ldr	r3, [r2]
  50 000c 0133     		adds	r3, r3, #1
  51 000e 1360     		str	r3, [r2]
  78:Core/Src/main.c **** }
  52              		.loc 1 78 1 view .LVU6
  53 0010 08BD     		pop	{r3, pc}
  54              	.L4:
  55 0012 00BF     		.align	2
  56              	.L3:
  57 0014 00000000 		.word	.LANCHOR0
  58 0018 00000000 		.word	.LANCHOR1
  59              		.cfi_endproc
  60              	.LFE133:
  62              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
  63              		.align	1
  64              		.global	HAL_GPIO_EXTI_Callback
  65              		.syntax unified
  66              		.thumb
  67              		.thumb_func
  69              	HAL_GPIO_EXTI_Callback:
  70              	.LVL3:
  71              	.LFB134:
  79:Core/Src/main.c **** 
  80:Core/Src/main.c **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
  81:Core/Src/main.c **** {
  72              		.loc 1 81 1 is_stmt 1 view -0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76              		.loc 1 81 1 is_stmt 0 view .LVU8
  77 0000 08B5     		push	{r3, lr}
  78              	.LCFI1:
  79              		.cfi_def_cfa_offset 8
  80              		.cfi_offset 3, -8
  81              		.cfi_offset 14, -4
  82:Core/Src/main.c ****   MPU6050_Read_DMA();
  82              		.loc 1 82 3 is_stmt 1 view .LVU9
  83 0002 FFF7FEFF 		bl	MPU6050_Read_DMA
  84              	.LVL4:
  83:Core/Src/main.c **** }
  85              		.loc 1 83 1 is_stmt 0 view .LVU10
  86 0006 08BD     		pop	{r3, pc}
  87              		.cfi_endproc
  88              	.LFE134:
  90              		.section	.text.Error_Handler,"ax",%progbits
  91              		.align	1
  92              		.global	Error_Handler
ARM GAS  C:\Users\Teodor\AppData\Local\Temp\ccD05ezz.s 			page 4


  93              		.syntax unified
  94              		.thumb
  95              		.thumb_func
  97              	Error_Handler:
  98              	.LFB137:
  84:Core/Src/main.c **** 
  85:Core/Src/main.c **** /* USER CODE END 0 */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c **** /**
  88:Core/Src/main.c ****   * @brief  The application entry point.
  89:Core/Src/main.c ****   * @retval int
  90:Core/Src/main.c ****   */
  91:Core/Src/main.c **** int main(void)
  92:Core/Src/main.c **** {
  93:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* USER CODE END 1 */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 100:Core/Src/main.c ****   HAL_Init();
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   /* USER CODE END Init */
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   /* Configure the system clock */
 107:Core/Src/main.c ****   SystemClock_Config();
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   /* USER CODE END SysInit */
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* Initialize all configured peripherals */
 114:Core/Src/main.c ****   MX_GPIO_Init();
 115:Core/Src/main.c ****   MX_DMA_Init();
 116:Core/Src/main.c ****   MX_I2C1_Init();
 117:Core/Src/main.c ****   MX_USART1_UART_Init();
 118:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   HAL_Delay(1000);
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   BLU_Init();
 123:Core/Src/main.c **** 
 124:Core/Src/main.c **** 
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   while(!MPU6050_Init(&hi2c1) )
 127:Core/Src/main.c ****   {
 128:Core/Src/main.c ****     MPU6050_DeviceReset(0);
 129:Core/Src/main.c ****     HAL_Delay(1000);
 130:Core/Src/main.c ****     MPU6050_DeviceReset(1);
 131:Core/Src/main.c ****   }
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****   // //The sensor must not move during calibration.
 134:Core/Src/main.c ****   // uint8_t* newCalibData = MPU6050_Calibrate_Gyro();
 135:Core/Src/main.c ****   // BLU_DbgMsgTransmit("\ngyroCalibValues[6] = %hi, %hi, %hi, %hi, %hi, %hi\n", 
ARM GAS  C:\Users\Teodor\AppData\Local\Temp\ccD05ezz.s 			page 5


 136:Core/Src/main.c ****   //                                     *newCalibData, *(newCalibData+1), *(newCalibData+2), 
 137:Core/Src/main.c ****   //                                     *(newCalibData+3), *(newCalibData+4), *(newCalibData+5));
 138:Core/Src/main.c **** 
 139:Core/Src/main.c ****   //You can calibrate with your previous calibration values for a hot start.
 140:Core/Src/main.c ****   //MPU6050_Set_Calibrate_Gyro(gyroCalibValues);
 141:Core/Src/main.c ****   MPU6050_Start_IRQ();
 142:Core/Src/main.c **** 
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****   MPU6050_Read_DMA();
 145:Core/Src/main.c ****   /* USER CODE END 2 */
 146:Core/Src/main.c **** 
 147:Core/Src/main.c ****   /* Infinite loop */
 148:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 149:Core/Src/main.c ****   while (1)
 150:Core/Src/main.c ****   {
 151:Core/Src/main.c ****     static uint32_t LogAccelTimer = 0;
 152:Core/Src/main.c **** 
 153:Core/Src/main.c ****     if( (HAL_GetTick() - LogAccelTimer > 100 ) ) //
 154:Core/Src/main.c ****     {
 155:Core/Src/main.c ****       LogAccelTimer = HAL_GetTick();
 156:Core/Src/main.c ****       BLU_DbgMsgTransmit("yaw: %.2f pitch: %.2f roll: %.2f Ax:%.2f Ay:%2f Az:%.2f, recDatCnt: %lu",
 157:Core/Src/main.c ****                                     MpuData.yaw, MpuData.pitch,MpuData.roll,
 158:Core/Src/main.c ****                                     MpuData.accX,MpuData.accY,MpuData.accZ,RecMpuDataCounter);
 159:Core/Src/main.c ****       // BLU_DbgMsgTransmit("DevId: %d",MPU6050_GetDeviceID() );
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****       MPU6050_Read_DMA();
 162:Core/Src/main.c ****     }
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****     BLU_Task();
 165:Core/Src/main.c ****     /* USER CODE END WHILE */
 166:Core/Src/main.c **** 
 167:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 168:Core/Src/main.c ****   }
 169:Core/Src/main.c ****   /* USER CODE END 3 */
 170:Core/Src/main.c **** }
 171:Core/Src/main.c **** 
 172:Core/Src/main.c **** /**
 173:Core/Src/main.c ****   * @brief System Clock Configuration
 174:Core/Src/main.c ****   * @retval None
 175:Core/Src/main.c ****   */
 176:Core/Src/main.c **** void SystemClock_Config(void)
 177:Core/Src/main.c **** {
 178:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 179:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 180:Core/Src/main.c **** 
 181:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 182:Core/Src/main.c ****   */
 183:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 184:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 185:Core/Src/main.c **** 
 186:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 187:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 188:Core/Src/main.c ****   */
 189:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 190:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 191:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 192:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
ARM GAS  C:\Users\Teodor\AppData\Local\Temp\ccD05ezz.s 			page 6


 193:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 194:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 195:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 196:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 197:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 198:Core/Src/main.c ****   {
 199:Core/Src/main.c ****     Error_Handler();
 200:Core/Src/main.c ****   }
 201:Core/Src/main.c **** 
 202:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 203:Core/Src/main.c ****   */
 204:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 205:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 206:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 207:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 208:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 209:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 210:Core/Src/main.c **** 
 211:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 212:Core/Src/main.c ****   {
 213:Core/Src/main.c ****     Error_Handler();
 214:Core/Src/main.c ****   }
 215:Core/Src/main.c **** }
 216:Core/Src/main.c **** 
 217:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 218:Core/Src/main.c **** 
 219:Core/Src/main.c **** /* USER CODE END 4 */
 220:Core/Src/main.c **** 
 221:Core/Src/main.c **** /**
 222:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 223:Core/Src/main.c ****   * @retval None
 224:Core/Src/main.c ****   */
 225:Core/Src/main.c **** void Error_Handler(void)
 226:Core/Src/main.c **** {
  99              		.loc 1 226 1 is_stmt 1 view -0
 100              		.cfi_startproc
 101              		@ Volatile: function does not return.
 102              		@ args = 0, pretend = 0, frame = 0
 103              		@ frame_needed = 0, uses_anonymous_args = 0
 104              		@ link register save eliminated.
 227:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 228:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 229:Core/Src/main.c ****   __disable_irq();
 105              		.loc 1 229 3 view .LVU12
 106              	.LBB4:
 107              	.LBI4:
 108              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
ARM GAS  C:\Users\Teodor\AppData\Local\Temp\ccD05ezz.s 			page 7


  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
ARM GAS  C:\Users\Teodor\AppData\Local\Temp\ccD05ezz.s 			page 8


  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\Teodor\AppData\Local\Temp\ccD05ezz.s 			page 9


 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 109              		.loc 2 140 27 view .LVU13
 110              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 111              		.loc 2 142 3 view .LVU14
 112              		.syntax unified
 113              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 114 0000 72B6     		cpsid i
 115              	@ 0 "" 2
 116              		.thumb
 117              		.syntax unified
 118              	.L8:
 119              	.LBE5:
 120              	.LBE4:
 230:Core/Src/main.c ****   while (1)
 121              		.loc 1 230 3 discriminator 1 view .LVU15
 231:Core/Src/main.c ****   {
 232:Core/Src/main.c ****   }
 122              		.loc 1 232 3 discriminator 1 view .LVU16
 230:Core/Src/main.c ****   while (1)
 123              		.loc 1 230 9 discriminator 1 view .LVU17
 124 0002 FEE7     		b	.L8
 125              		.cfi_endproc
 126              	.LFE137:
 128              		.section	.text.SystemClock_Config,"ax",%progbits
 129              		.align	1
 130              		.global	SystemClock_Config
 131              		.syntax unified
 132              		.thumb
 133              		.thumb_func
 135              	SystemClock_Config:
 136              	.LFB136:
 177:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 137              		.loc 1 177 1 view -0
 138              		.cfi_startproc
 139              		@ args = 0, pretend = 0, frame = 80
 140              		@ frame_needed = 0, uses_anonymous_args = 0
 141 0000 00B5     		push	{lr}
 142              	.LCFI2:
 143              		.cfi_def_cfa_offset 4
 144              		.cfi_offset 14, -4
ARM GAS  C:\Users\Teodor\AppData\Local\Temp\ccD05ezz.s 			page 10


 145 0002 95B0     		sub	sp, sp, #84
 146              	.LCFI3:
 147              		.cfi_def_cfa_offset 88
 178:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 148              		.loc 1 178 3 view .LVU19
 178:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 149              		.loc 1 178 22 is_stmt 0 view .LVU20
 150 0004 3022     		movs	r2, #48
 151 0006 0021     		movs	r1, #0
 152 0008 08A8     		add	r0, sp, #32
 153 000a FFF7FEFF 		bl	memset
 154              	.LVL5:
 179:Core/Src/main.c **** 
 155              		.loc 1 179 3 is_stmt 1 view .LVU21
 179:Core/Src/main.c **** 
 156              		.loc 1 179 22 is_stmt 0 view .LVU22
 157 000e 0023     		movs	r3, #0
 158 0010 0393     		str	r3, [sp, #12]
 159 0012 0493     		str	r3, [sp, #16]
 160 0014 0593     		str	r3, [sp, #20]
 161 0016 0693     		str	r3, [sp, #24]
 162 0018 0793     		str	r3, [sp, #28]
 183:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 163              		.loc 1 183 3 is_stmt 1 view .LVU23
 164              	.LBB6:
 183:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 165              		.loc 1 183 3 view .LVU24
 166 001a 0193     		str	r3, [sp, #4]
 183:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 167              		.loc 1 183 3 view .LVU25
 168 001c 204A     		ldr	r2, .L15
 169 001e 116C     		ldr	r1, [r2, #64]
 170 0020 41F08051 		orr	r1, r1, #268435456
 171 0024 1164     		str	r1, [r2, #64]
 183:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 172              		.loc 1 183 3 view .LVU26
 173 0026 126C     		ldr	r2, [r2, #64]
 174 0028 02F08052 		and	r2, r2, #268435456
 175 002c 0192     		str	r2, [sp, #4]
 183:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 176              		.loc 1 183 3 view .LVU27
 177 002e 019A     		ldr	r2, [sp, #4]
 178              	.LBE6:
 183:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 179              		.loc 1 183 3 view .LVU28
 184:Core/Src/main.c **** 
 180              		.loc 1 184 3 view .LVU29
 181              	.LBB7:
 184:Core/Src/main.c **** 
 182              		.loc 1 184 3 view .LVU30
 183 0030 0293     		str	r3, [sp, #8]
 184:Core/Src/main.c **** 
 184              		.loc 1 184 3 view .LVU31
 185 0032 1C4A     		ldr	r2, .L15+4
 186 0034 1368     		ldr	r3, [r2]
 187 0036 23F44043 		bic	r3, r3, #49152
 188 003a 43F40043 		orr	r3, r3, #32768
ARM GAS  C:\Users\Teodor\AppData\Local\Temp\ccD05ezz.s 			page 11


 189 003e 1360     		str	r3, [r2]
 184:Core/Src/main.c **** 
 190              		.loc 1 184 3 view .LVU32
 191 0040 1368     		ldr	r3, [r2]
 192 0042 03F44043 		and	r3, r3, #49152
 193 0046 0293     		str	r3, [sp, #8]
 184:Core/Src/main.c **** 
 194              		.loc 1 184 3 view .LVU33
 195 0048 029B     		ldr	r3, [sp, #8]
 196              	.LBE7:
 184:Core/Src/main.c **** 
 197              		.loc 1 184 3 view .LVU34
 189:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 198              		.loc 1 189 3 view .LVU35
 189:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 199              		.loc 1 189 36 is_stmt 0 view .LVU36
 200 004a 0123     		movs	r3, #1
 201 004c 0893     		str	r3, [sp, #32]
 190:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 202              		.loc 1 190 3 is_stmt 1 view .LVU37
 190:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 203              		.loc 1 190 30 is_stmt 0 view .LVU38
 204 004e 4FF48033 		mov	r3, #65536
 205 0052 0993     		str	r3, [sp, #36]
 191:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 206              		.loc 1 191 3 is_stmt 1 view .LVU39
 191:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 207              		.loc 1 191 34 is_stmt 0 view .LVU40
 208 0054 0223     		movs	r3, #2
 209 0056 0E93     		str	r3, [sp, #56]
 192:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 210              		.loc 1 192 3 is_stmt 1 view .LVU41
 192:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 211              		.loc 1 192 35 is_stmt 0 view .LVU42
 212 0058 4FF48002 		mov	r2, #4194304
 213 005c 0F92     		str	r2, [sp, #60]
 193:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 214              		.loc 1 193 3 is_stmt 1 view .LVU43
 193:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 215              		.loc 1 193 30 is_stmt 0 view .LVU44
 216 005e 1922     		movs	r2, #25
 217 0060 1092     		str	r2, [sp, #64]
 194:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 218              		.loc 1 194 3 is_stmt 1 view .LVU45
 194:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 219              		.loc 1 194 30 is_stmt 0 view .LVU46
 220 0062 A822     		movs	r2, #168
 221 0064 1192     		str	r2, [sp, #68]
 195:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 222              		.loc 1 195 3 is_stmt 1 view .LVU47
 195:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 223              		.loc 1 195 30 is_stmt 0 view .LVU48
 224 0066 1293     		str	r3, [sp, #72]
 196:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 225              		.loc 1 196 3 is_stmt 1 view .LVU49
 196:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 226              		.loc 1 196 30 is_stmt 0 view .LVU50
ARM GAS  C:\Users\Teodor\AppData\Local\Temp\ccD05ezz.s 			page 12


 227 0068 0423     		movs	r3, #4
 228 006a 1393     		str	r3, [sp, #76]
 197:Core/Src/main.c ****   {
 229              		.loc 1 197 3 is_stmt 1 view .LVU51
 197:Core/Src/main.c ****   {
 230              		.loc 1 197 7 is_stmt 0 view .LVU52
 231 006c 08A8     		add	r0, sp, #32
 232 006e FFF7FEFF 		bl	HAL_RCC_OscConfig
 233              	.LVL6:
 197:Core/Src/main.c ****   {
 234              		.loc 1 197 6 view .LVU53
 235 0072 80B9     		cbnz	r0, .L13
 204:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 236              		.loc 1 204 3 is_stmt 1 view .LVU54
 204:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 237              		.loc 1 204 31 is_stmt 0 view .LVU55
 238 0074 0F23     		movs	r3, #15
 239 0076 0393     		str	r3, [sp, #12]
 206:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 240              		.loc 1 206 3 is_stmt 1 view .LVU56
 206:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 241              		.loc 1 206 34 is_stmt 0 view .LVU57
 242 0078 0221     		movs	r1, #2
 243 007a 0491     		str	r1, [sp, #16]
 207:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 244              		.loc 1 207 3 is_stmt 1 view .LVU58
 207:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 245              		.loc 1 207 35 is_stmt 0 view .LVU59
 246 007c 0023     		movs	r3, #0
 247 007e 0593     		str	r3, [sp, #20]
 208:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 248              		.loc 1 208 3 is_stmt 1 view .LVU60
 208:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 249              		.loc 1 208 36 is_stmt 0 view .LVU61
 250 0080 4FF48052 		mov	r2, #4096
 251 0084 0692     		str	r2, [sp, #24]
 209:Core/Src/main.c **** 
 252              		.loc 1 209 3 is_stmt 1 view .LVU62
 209:Core/Src/main.c **** 
 253              		.loc 1 209 36 is_stmt 0 view .LVU63
 254 0086 0793     		str	r3, [sp, #28]
 211:Core/Src/main.c ****   {
 255              		.loc 1 211 3 is_stmt 1 view .LVU64
 211:Core/Src/main.c ****   {
 256              		.loc 1 211 7 is_stmt 0 view .LVU65
 257 0088 03A8     		add	r0, sp, #12
 258 008a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 259              	.LVL7:
 211:Core/Src/main.c ****   {
 260              		.loc 1 211 6 view .LVU66
 261 008e 20B9     		cbnz	r0, .L14
 215:Core/Src/main.c **** 
 262              		.loc 1 215 1 view .LVU67
 263 0090 15B0     		add	sp, sp, #84
 264              	.LCFI4:
 265              		.cfi_remember_state
 266              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\Teodor\AppData\Local\Temp\ccD05ezz.s 			page 13


 267              		@ sp needed
 268 0092 5DF804FB 		ldr	pc, [sp], #4
 269              	.L13:
 270              	.LCFI5:
 271              		.cfi_restore_state
 199:Core/Src/main.c ****   }
 272              		.loc 1 199 5 is_stmt 1 view .LVU68
 273 0096 FFF7FEFF 		bl	Error_Handler
 274              	.LVL8:
 275              	.L14:
 213:Core/Src/main.c ****   }
 276              		.loc 1 213 5 view .LVU69
 277 009a FFF7FEFF 		bl	Error_Handler
 278              	.LVL9:
 279              	.L16:
 280 009e 00BF     		.align	2
 281              	.L15:
 282 00a0 00380240 		.word	1073887232
 283 00a4 00700040 		.word	1073770496
 284              		.cfi_endproc
 285              	.LFE136:
 287              		.global	__aeabi_f2d
 288              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 289              		.align	2
 290              	.LC0:
 291 0000 7961773A 		.ascii	"yaw: %.2f pitch: %.2f roll: %.2f Ax:%.2f Ay:%2f Az:"
 291      20252E32 
 291      66207069 
 291      7463683A 
 291      20252E32 
 292 0033 252E3266 		.ascii	"%.2f, recDatCnt: %lu\000"
 292      2C207265 
 292      63446174 
 292      436E743A 
 292      20256C75 
 293              		.section	.text.main,"ax",%progbits
 294              		.align	1
 295              		.global	main
 296              		.syntax unified
 297              		.thumb
 298              		.thumb_func
 300              	main:
 301              	.LFB135:
  92:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 302              		.loc 1 92 1 view -0
 303              		.cfi_startproc
 304              		@ Volatile: function does not return.
 305              		@ args = 0, pretend = 0, frame = 0
 306              		@ frame_needed = 0, uses_anonymous_args = 0
 307 0000 80B5     		push	{r7, lr}
 308              	.LCFI6:
 309              		.cfi_def_cfa_offset 8
 310              		.cfi_offset 7, -8
 311              		.cfi_offset 14, -4
 312 0002 8CB0     		sub	sp, sp, #48
 313              	.LCFI7:
 314              		.cfi_def_cfa_offset 56
ARM GAS  C:\Users\Teodor\AppData\Local\Temp\ccD05ezz.s 			page 14


 100:Core/Src/main.c **** 
 315              		.loc 1 100 3 view .LVU71
 316 0004 FFF7FEFF 		bl	HAL_Init
 317              	.LVL10:
 107:Core/Src/main.c **** 
 318              		.loc 1 107 3 view .LVU72
 319 0008 FFF7FEFF 		bl	SystemClock_Config
 320              	.LVL11:
 114:Core/Src/main.c ****   MX_DMA_Init();
 321              		.loc 1 114 3 view .LVU73
 322 000c FFF7FEFF 		bl	MX_GPIO_Init
 323              	.LVL12:
 115:Core/Src/main.c ****   MX_I2C1_Init();
 324              		.loc 1 115 3 view .LVU74
 325 0010 FFF7FEFF 		bl	MX_DMA_Init
 326              	.LVL13:
 116:Core/Src/main.c ****   MX_USART1_UART_Init();
 327              		.loc 1 116 3 view .LVU75
 328 0014 FFF7FEFF 		bl	MX_I2C1_Init
 329              	.LVL14:
 117:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 330              		.loc 1 117 3 view .LVU76
 331 0018 FFF7FEFF 		bl	MX_USART1_UART_Init
 332              	.LVL15:
 120:Core/Src/main.c **** 
 333              		.loc 1 120 3 view .LVU77
 334 001c 4FF47A70 		mov	r0, #1000
 335 0020 FFF7FEFF 		bl	HAL_Delay
 336              	.LVL16:
 122:Core/Src/main.c **** 
 337              		.loc 1 122 3 view .LVU78
 338 0024 FFF7FEFF 		bl	BLU_Init
 339              	.LVL17:
 126:Core/Src/main.c ****   {
 340              		.loc 1 126 3 view .LVU79
 126:Core/Src/main.c ****   {
 341              		.loc 1 126 8 is_stmt 0 view .LVU80
 342 0028 09E0     		b	.L18
 343              	.L19:
 128:Core/Src/main.c ****     HAL_Delay(1000);
 344              		.loc 1 128 5 is_stmt 1 view .LVU81
 345 002a 0020     		movs	r0, #0
 346 002c FFF7FEFF 		bl	MPU6050_DeviceReset
 347              	.LVL18:
 129:Core/Src/main.c ****     MPU6050_DeviceReset(1);
 348              		.loc 1 129 5 view .LVU82
 349 0030 4FF47A70 		mov	r0, #1000
 350 0034 FFF7FEFF 		bl	HAL_Delay
 351              	.LVL19:
 130:Core/Src/main.c ****   }
 352              		.loc 1 130 5 view .LVU83
 353 0038 0120     		movs	r0, #1
 354 003a FFF7FEFF 		bl	MPU6050_DeviceReset
 355              	.LVL20:
 356              	.L18:
 126:Core/Src/main.c ****   {
 357              		.loc 1 126 8 view .LVU84
ARM GAS  C:\Users\Teodor\AppData\Local\Temp\ccD05ezz.s 			page 15


 126:Core/Src/main.c ****   {
 358              		.loc 1 126 10 is_stmt 0 view .LVU85
 359 003e 2448     		ldr	r0, .L24
 360 0040 FFF7FEFF 		bl	MPU6050_Init
 361              	.LVL21:
 126:Core/Src/main.c ****   {
 362              		.loc 1 126 8 view .LVU86
 363 0044 0028     		cmp	r0, #0
 364 0046 F0D0     		beq	.L19
 141:Core/Src/main.c **** 
 365              		.loc 1 141 3 is_stmt 1 view .LVU87
 366 0048 FFF7FEFF 		bl	MPU6050_Start_IRQ
 367              	.LVL22:
 144:Core/Src/main.c ****   /* USER CODE END 2 */
 368              		.loc 1 144 3 view .LVU88
 369 004c FFF7FEFF 		bl	MPU6050_Read_DMA
 370              	.LVL23:
 371 0050 36E0     		b	.L21
 372              	.L23:
 373              	.LBB8:
 155:Core/Src/main.c ****       BLU_DbgMsgTransmit("yaw: %.2f pitch: %.2f roll: %.2f Ax:%.2f Ay:%2f Az:%.2f, recDatCnt: %lu",
 374              		.loc 1 155 7 view .LVU89
 155:Core/Src/main.c ****       BLU_DbgMsgTransmit("yaw: %.2f pitch: %.2f roll: %.2f Ax:%.2f Ay:%2f Az:%.2f, recDatCnt: %lu",
 375              		.loc 1 155 23 is_stmt 0 view .LVU90
 376 0052 FFF7FEFF 		bl	HAL_GetTick
 377              	.LVL24:
 155:Core/Src/main.c ****       BLU_DbgMsgTransmit("yaw: %.2f pitch: %.2f roll: %.2f Ax:%.2f Ay:%2f Az:%.2f, recDatCnt: %lu",
 378              		.loc 1 155 21 view .LVU91
 379 0056 1F4B     		ldr	r3, .L24+4
 380 0058 1860     		str	r0, [r3]
 156:Core/Src/main.c ****                                     MpuData.yaw, MpuData.pitch,MpuData.roll,
 381              		.loc 1 156 7 is_stmt 1 view .LVU92
 157:Core/Src/main.c ****                                     MpuData.accX,MpuData.accY,MpuData.accZ,RecMpuDataCounter);
 382              		.loc 1 157 44 is_stmt 0 view .LVU93
 383 005a 1F4B     		ldr	r3, .L24+8
 157:Core/Src/main.c ****                                     MpuData.accX,MpuData.accY,MpuData.accZ,RecMpuDataCounter);
 384              		.loc 1 157 57 view .LVU94
 385 005c DE69     		ldr	r6, [r3, #28]	@ float
 157:Core/Src/main.c ****                                     MpuData.accX,MpuData.accY,MpuData.accZ,RecMpuDataCounter);
 386              		.loc 1 157 71 view .LVU95
 387 005e 9F69     		ldr	r7, [r3, #24]	@ float
 158:Core/Src/main.c ****       // BLU_DbgMsgTransmit("DevId: %d",MPU6050_GetDeviceID() );
 388              		.loc 1 158 44 view .LVU96
 389 0060 D3F80C80 		ldr	r8, [r3, #12]	@ float
 158:Core/Src/main.c ****       // BLU_DbgMsgTransmit("DevId: %d",MPU6050_GetDeviceID() );
 390              		.loc 1 158 57 view .LVU97
 391 0064 D3F81090 		ldr	r9, [r3, #16]	@ float
 158:Core/Src/main.c ****       // BLU_DbgMsgTransmit("DevId: %d",MPU6050_GetDeviceID() );
 392              		.loc 1 158 70 view .LVU98
 393 0068 D3F814A0 		ldr	r10, [r3, #20]	@ float
 156:Core/Src/main.c ****                                     MpuData.yaw, MpuData.pitch,MpuData.roll,
 394              		.loc 1 156 7 view .LVU99
 395 006c 186A     		ldr	r0, [r3, #32]	@ float
 396 006e FFF7FEFF 		bl	__aeabi_f2d
 397              	.LVL25:
 398 0072 0446     		mov	r4, r0
 399 0074 0D46     		mov	r5, r1
ARM GAS  C:\Users\Teodor\AppData\Local\Temp\ccD05ezz.s 			page 16


 400 0076 194B     		ldr	r3, .L24+12
 401 0078 1B68     		ldr	r3, [r3]
 402 007a 0A93     		str	r3, [sp, #40]
 403 007c 5046     		mov	r0, r10	@ float
 404 007e FFF7FEFF 		bl	__aeabi_f2d
 405              	.LVL26:
 406 0082 CDE90801 		strd	r0, [sp, #32]
 407 0086 4846     		mov	r0, r9	@ float
 408 0088 FFF7FEFF 		bl	__aeabi_f2d
 409              	.LVL27:
 410 008c CDE90601 		strd	r0, [sp, #24]
 411 0090 4046     		mov	r0, r8	@ float
 412 0092 FFF7FEFF 		bl	__aeabi_f2d
 413              	.LVL28:
 414 0096 CDE90401 		strd	r0, [sp, #16]
 415 009a 3846     		mov	r0, r7	@ float
 416 009c FFF7FEFF 		bl	__aeabi_f2d
 417              	.LVL29:
 418 00a0 CDE90201 		strd	r0, [sp, #8]
 419 00a4 3046     		mov	r0, r6	@ float
 420 00a6 FFF7FEFF 		bl	__aeabi_f2d
 421              	.LVL30:
 422 00aa CDE90001 		strd	r0, [sp]
 423 00ae 2246     		mov	r2, r4
 424 00b0 2B46     		mov	r3, r5
 425 00b2 0B48     		ldr	r0, .L24+16
 426 00b4 FFF7FEFF 		bl	BLU_DbgMsgTransmit
 427              	.LVL31:
 161:Core/Src/main.c ****     }
 428              		.loc 1 161 7 is_stmt 1 view .LVU100
 429 00b8 FFF7FEFF 		bl	MPU6050_Read_DMA
 430              	.LVL32:
 431              	.L20:
 164:Core/Src/main.c ****     /* USER CODE END WHILE */
 432              		.loc 1 164 5 view .LVU101
 433 00bc FFF7FEFF 		bl	BLU_Task
 434              	.LVL33:
 435              	.LBE8:
 149:Core/Src/main.c ****   {
 436              		.loc 1 149 9 view .LVU102
 437              	.L21:
 149:Core/Src/main.c ****   {
 438              		.loc 1 149 3 view .LVU103
 439              	.LBB9:
 151:Core/Src/main.c **** 
 440              		.loc 1 151 5 view .LVU104
 153:Core/Src/main.c ****     {
 441              		.loc 1 153 5 view .LVU105
 153:Core/Src/main.c ****     {
 442              		.loc 1 153 10 is_stmt 0 view .LVU106
 443 00c0 FFF7FEFF 		bl	HAL_GetTick
 444              	.LVL34:
 153:Core/Src/main.c ****     {
 445              		.loc 1 153 24 view .LVU107
 446 00c4 034B     		ldr	r3, .L24+4
 447 00c6 1B68     		ldr	r3, [r3]
 448 00c8 C01A     		subs	r0, r0, r3
ARM GAS  C:\Users\Teodor\AppData\Local\Temp\ccD05ezz.s 			page 17


 153:Core/Src/main.c ****     {
 449              		.loc 1 153 7 view .LVU108
 450 00ca 6428     		cmp	r0, #100
 451 00cc C1D8     		bhi	.L23
 452 00ce F5E7     		b	.L20
 453              	.L25:
 454              		.align	2
 455              	.L24:
 456 00d0 00000000 		.word	hi2c1
 457 00d4 00000000 		.word	.LANCHOR2
 458 00d8 00000000 		.word	.LANCHOR0
 459 00dc 00000000 		.word	.LANCHOR1
 460 00e0 00000000 		.word	.LC0
 461              	.LBE9:
 462              		.cfi_endproc
 463              	.LFE135:
 465              		.global	MpuData
 466              		.global	gyroCalibValues
 467              		.global	RecMpuDataCounter
 468              		.section	.bss.LogAccelTimer.0,"aw",%nobits
 469              		.align	2
 470              		.set	.LANCHOR2,. + 0
 473              	LogAccelTimer.0:
 474 0000 00000000 		.space	4
 475              		.section	.bss.MpuData,"aw",%nobits
 476              		.align	2
 477              		.set	.LANCHOR0,. + 0
 480              	MpuData:
 481 0000 00000000 		.space	48
 481      00000000 
 481      00000000 
 481      00000000 
 481      00000000 
 482              		.section	.bss.RecMpuDataCounter,"aw",%nobits
 483              		.align	2
 484              		.set	.LANCHOR1,. + 0
 487              	RecMpuDataCounter:
 488 0000 00000000 		.space	4
 489              		.section	.data.gyroCalibValues,"aw"
 490              		.align	2
 493              	gyroCalibValues:
 494 0000 0017003F 		.ascii	"\000\027\000?\000\033"
 494      001B
 495              		.text
 496              	.Letext0:
 497              		.file 3 "e:\\gnu_tools\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\machine\\_
 498              		.file 4 "e:\\gnu_tools\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\sys\\_stdi
 499              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xc.h"
 500              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 501              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 502              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 503              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 504              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 505              		.file 11 "Drivers/Imu/mpu6050.h"
 506              		.file 12 "Core/Inc/i2c.h"
 507              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 508              		.file 14 "Drivers/BluetoothComm/BluetoothClassicComm.h"
ARM GAS  C:\Users\Teodor\AppData\Local\Temp\ccD05ezz.s 			page 18


 509              		.file 15 "Core/Inc/gpio.h"
 510              		.file 16 "Core/Inc/dma.h"
 511              		.file 17 "Core/Inc/usart.h"
 512              		.file 18 "<built-in>"
ARM GAS  C:\Users\Teodor\AppData\Local\Temp\ccD05ezz.s 			page 19


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Teodor\AppData\Local\Temp\ccD05ezz.s:20     .text.HAL_I2C_MemRxCpltCallback:00000000 $t
C:\Users\Teodor\AppData\Local\Temp\ccD05ezz.s:26     .text.HAL_I2C_MemRxCpltCallback:00000000 HAL_I2C_MemRxCpltCallback
C:\Users\Teodor\AppData\Local\Temp\ccD05ezz.s:57     .text.HAL_I2C_MemRxCpltCallback:00000014 $d
C:\Users\Teodor\AppData\Local\Temp\ccD05ezz.s:63     .text.HAL_GPIO_EXTI_Callback:00000000 $t
C:\Users\Teodor\AppData\Local\Temp\ccD05ezz.s:69     .text.HAL_GPIO_EXTI_Callback:00000000 HAL_GPIO_EXTI_Callback
C:\Users\Teodor\AppData\Local\Temp\ccD05ezz.s:91     .text.Error_Handler:00000000 $t
C:\Users\Teodor\AppData\Local\Temp\ccD05ezz.s:97     .text.Error_Handler:00000000 Error_Handler
C:\Users\Teodor\AppData\Local\Temp\ccD05ezz.s:129    .text.SystemClock_Config:00000000 $t
C:\Users\Teodor\AppData\Local\Temp\ccD05ezz.s:135    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\Teodor\AppData\Local\Temp\ccD05ezz.s:282    .text.SystemClock_Config:000000a0 $d
C:\Users\Teodor\AppData\Local\Temp\ccD05ezz.s:289    .rodata.main.str1.4:00000000 $d
C:\Users\Teodor\AppData\Local\Temp\ccD05ezz.s:294    .text.main:00000000 $t
C:\Users\Teodor\AppData\Local\Temp\ccD05ezz.s:300    .text.main:00000000 main
C:\Users\Teodor\AppData\Local\Temp\ccD05ezz.s:456    .text.main:000000d0 $d
C:\Users\Teodor\AppData\Local\Temp\ccD05ezz.s:480    .bss.MpuData:00000000 MpuData
C:\Users\Teodor\AppData\Local\Temp\ccD05ezz.s:493    .data.gyroCalibValues:00000000 gyroCalibValues
C:\Users\Teodor\AppData\Local\Temp\ccD05ezz.s:487    .bss.RecMpuDataCounter:00000000 RecMpuDataCounter
C:\Users\Teodor\AppData\Local\Temp\ccD05ezz.s:469    .bss.LogAccelTimer.0:00000000 $d
C:\Users\Teodor\AppData\Local\Temp\ccD05ezz.s:473    .bss.LogAccelTimer.0:00000000 LogAccelTimer.0
C:\Users\Teodor\AppData\Local\Temp\ccD05ezz.s:476    .bss.MpuData:00000000 $d
C:\Users\Teodor\AppData\Local\Temp\ccD05ezz.s:483    .bss.RecMpuDataCounter:00000000 $d
C:\Users\Teodor\AppData\Local\Temp\ccD05ezz.s:490    .data.gyroCalibValues:00000000 $d

UNDEFINED SYMBOLS
MPU6050_ReadDmaDataEndCallBack
MPU6050_Read_DMA
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
__aeabi_f2d
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_I2C1_Init
MX_USART1_UART_Init
HAL_Delay
BLU_Init
MPU6050_DeviceReset
MPU6050_Init
MPU6050_Start_IRQ
HAL_GetTick
BLU_DbgMsgTransmit
BLU_Task
hi2c1
